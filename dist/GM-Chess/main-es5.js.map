{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/chess-dialog/chess-dialog.component.ts","webpack:///src/app/chess-dialog/chess-dialog.component.html","webpack:///src/app/game/game.component.ts","webpack:///src/app/game/game.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/play-with-computer-settings/play-with-computer-settings.component.ts","webpack:///src/app/play-with-computer-settings/play-with-computer-settings.component.html","webpack:///src/app/play-with-computer/play-with-computer.component.ts","webpack:///src/app/play-with-computer/play-with-computer.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ChessDialogComponent","dialogRef","data","GameComponent","self","game","board","ChessBoard","draggable","position","onDragStart","source","piece","orientation","onDrop","target","newPos","oldPos","onSnapEnd","updateStatus","game_over","turn","search","move","from","to","promotion","fen","status","moveColor","in_checkmate","in_draw","in_check","pgn","LoginComponent","MenuComponent","PlayWithComputerSettingsComponent","PlayWithComputerComponent","dialog","breakpointObserver","engine","Worker","evaler","displayScore","time","Time","clockTimeoutID","isEngineRunning","chessClock","ChessClock","isMobileScreen","isMatched","setInterval","whiteTime","whiteClock","getTime","blackTime","blackClock","engineStatus","EngineStatus","setPlayerColor","displayStatus","uciCmd","onmessage","evalerOnmessage","event","engineOnmessage","start","re","playerColor","cmd","which","console","log","postMessage","engineLoaded","engineReady","score","substr","moves","history","verbose","i","length","playerStatus","computerStatus","get_moves","depth","getMilliSeconds","open","width","reason","in_threefold_repetition","in_stalemate","insufficient_material","line","match","prepareMove","stopPlayer2Clock","parseInt","toFixed","Math","abs","stopPlayer1Clock","setSkillLevel","load_pgn","color","skill","max_err","err_prob","difficulty_slider","level","round","nodes","contempt","value","flag","announced_game_over","undo","ngOnInit","startWhitePlay","stop","startBlackPlay","newGame","switchColor","Clock","hours","minutes","seconds","timeoutId","clearTimeout","undefined","toString","totalSeconds","stopColor","isBlackPlayStarted","isWhitePlayStarted","RegisterComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PlayWithComputerSettingsComponent} from './play-with-computer-settings/play-with-computer-settings.component';\nimport { PlayWithComputerComponent } from './play-with-computer/play-with-computer.component';\nimport { GameComponent } from './game/game.component';\nconst routes: Routes = [\n  { path: 'playWithComputerSettings', component: PlayWithComputerSettingsComponent },\n  { path: '', component: PlayWithComputerComponent },\n  { path: 'playOnline', component: GameComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'JeffChess';\n}\n","<app-menu></app-menu>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {LayoutModule} from '@angular/cdk/layout';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GameComponent } from './game/game.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { PlayWithComputerComponent } from './play-with-computer/play-with-computer.component';\nimport { PlayWithComputerSettingsComponent } from './play-with-computer-settings/play-with-computer-settings.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ChessDialogComponent } from './chess-dialog/chess-dialog.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameComponent,\n    LoginComponent,\n    RegisterComponent,\n    PlayWithComputerComponent,\n    PlayWithComputerSettingsComponent,\n    MenuComponent,\n    ChessDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    LayoutModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject  } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-chess-dialog',\n  templateUrl: './chess-dialog.component.html',\n  styleUrls: ['./chess-dialog.component.css']\n})\nexport class ChessDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<ChessDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"chessDialog\">\n    <div class=\"dialogHeader\">\n        <h1>Game Over</h1>\n    </div>\n    <div class=\"dialogContent\">\n        <h2>{{data.reason}}</h2>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport * as Chess from 'chess.js';\ndeclare var ChessBoard:any;\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n\n  board:any;\n  game:any;\n  status: string;\n  pgn:string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    const self = this;\n    this.game = new Chess();\n   this.board = ChessBoard('chessBoard',{\n      draggable: true,\n      position: 'start',\n      onDragStart: function (source, piece, position, orientation) { \n        return self.onDragStart(source, piece, position, orientation); \n      },\n      onDrop: function (source, target, piece, newPos, oldPos, orientation) { \n        return self.onDrop(source, target); \n      },\n      onSnapEnd: function (source, target, piece) { \n        self.onSnapEnd(); \n      }\n    });\n    this.updateStatus;\n  }\n\n  private onDragStart (source, piece, position, orientation) {\n    // do not pick up pieces if the game is over\n    //this.game = new Chess();\n    //console.log(this.board);\n\n    if (this.game.game_over()) return false\n  \n    // only pick up pieces for the side to move\n    if ((this.game.turn() === 'w' && piece.search(/^b/) !== -1) ||\n        (this.game.turn() === 'b' && piece.search(/^w/) !== -1)) {\n      return false\n    }\n  }\n\n  private onDrop (source, target) {\n    // see if the move is legal\n    var move = this.game.move({\n      from: source,\n      to: target,\n      promotion: 'q' // NOTE: always promote to a queen for example simplicity\n    })\n  \n    // illegal move\n    if (move === null) \n      return 'snapback'\n    this.updateStatus;\n  }\n\n  private onSnapEnd () {\n    this.board.position(this.game.fen())\n    //console.log(this.board);\n  }\n\n  private updateStatus() {\n    var status = ''\n  \n    var moveColor = 'White'\n    if (this.game.turn() === 'b') {\n      moveColor = 'Black'\n    }\n  \n    // checkmate?\n    if (this.game.in_checkmate()) {\n      status = 'Game over, ' + moveColor + ' is in checkmate.'\n    }\n  \n    // draw?\n    else if (this.game.in_draw()) {\n      status = 'Game over, drawn position'\n    }\n  \n    // game still on\n    else {\n      status = moveColor + ' to move'\n  \n      // check?\n      if (this.game.in_check()) {\n        status += ', ' + moveColor + ' is in check'\n      }\n    }\n  \n    this.status = status;\n    this.pgn = this.game.pgn();\n  }\n\n}\n","Status : {{status}}\n<div id=\"chessBoard\" style=\"width: 400px;\"></div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-sidenav-container>\n    <mat-sidenav #sidenav mode=\"over\" class=\"sideNavBar\">\n        <div>\n            <img src=\"assets/images/avatar.png\" alt=\"Avatar\" class=\"avatar\">\n            <span class=\"userName\">Isaac Jefferson</span>\n        </div>\n        <div>\n            <mat-nav-list>\n                <!--<a mat-list-item href=\"playOnline\">Play Online</a> -->\n                <a mat-list-item href=\"playWithComputer\">Play With Computer</a>\n                <!--<a mat-list-item href=\"playWithFriend\">Play With Friends</a>-->\n            </mat-nav-list>\n        </div>\n    </mat-sidenav>\n    <mat-sidenav-content>\n        <div class=\"header\">\n            <button mat-icon-button color=\"accent\" (click)=\"sidenav.toggle()\" aria-label=\"Menu icon\">\n                <mat-icon>menu</mat-icon>\n            </button>\n            <h2 class=\"title\">GM Chess</h2>\n        </div>\n        <div class=\"container\">\n            <router-outlet></router-outlet>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-play-with-computer-settings',\n  templateUrl: './play-with-computer-settings.component.html',\n  styleUrls: ['./play-with-computer-settings.component.css']\n})\nexport class PlayWithComputerSettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form class=\"form-horizontal\">\n    <div class=\"form-group\">\n      <label for=\"timeBase\" class=\"control-label col-xs-4 col-sm-6 col-md-4\">Base time (min)</label>\n      <div class=\"col-xs-4 col-sm-6 col-md-4\">\n        <input type=\"number\" class=\"form-control\" id=\"timeBase\" value=\"5\">\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"timeInc\" class=\"control-label col-xs-4 col-sm-6 col-md-4\">Increment (sec)</label>\n      <div class=\"col-xs-4 col-sm-6 col-md-4\">\n        <input type=\"number\" class=\"form-control\" id=\"timeInc\" value=\"2\">\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"skillLevel\" class=\"control-label col-xs-4 col-sm-6 col-md-4\">Skill Level (0-20)</label>\n      <div class=\"col-xs-4 col-sm-6 col-md-4\">\n        <input type=\"number\" class=\"form-control\" id=\"skillLevel\" value=\"0\">\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"color\" class=\"control-label col-xs-4 col-sm-6 col-md-4\">I play</label>\n      <div class=\"col-xs-4 col-sm-6 col-md-4\">\n        <div class=\"btn-group\" data-toggle=\"buttons\">\n          <label class=\"btn btn-primary active\" id=\"color-white\"><input type=\"radio\" name=\"color\">White</label>\n          <label class=\"btn btn-primary\" id=\"color-black\"><input type=\"radio\" name=\"color\">Black</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"showScore\" class=\"control-label col-xs-4 col-sm-6 col-md-4\">Show score</label>\n      <div class=\"col-xs-4 col-sm-6 col-md-4\">\n        <input type=\"checkbox\" class=\"form-control\" id=\"showScore\" checked>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"color\" class=\"control-label col-xs-4 col-sm-6 col-md-4\"></label>\n      <div class=\"col-xs-4 col-sm-6 col-md-4\">\n        <button type=\"button\" class=\"btn btn-primary\" routerLink=\"/\">New Game</button>\n      </div>\n    </div>\n    \n    <div class=\"form-group\">\n      <label for=\"color\" class=\"control-label col-xs-4 col-sm-6 col-md-4\">Promote to</label>\n      <div class=\"col-xs-4 col-sm-6 col-md-4\">\n        <select id=promote>\n          <option value=q selected>Queen</option>\n          <option value=r>Rook</option>\n          <option value=b>Bishop</option>\n          <option value=n>Knight</option>\n        </select>\n      </div>\n    </div>\n  </form>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\nimport { ChessDialogComponent } from '../chess-dialog/chess-dialog.component';\nimport * as Chess from 'chess.js';\ndeclare var ChessBoard:any;\ndeclare var Stockfish:any;\n\n@Component({\n  selector: 'app-play-with-computer',\n  templateUrl: './play-with-computer.component.html',\n  styleUrls: ['./play-with-computer.component.css']\n})\nexport class PlayWithComputerComponent implements OnInit {\n  isMobileScreen;\n  board:any;\n  game:any;\n  status: string;\n  pgn:string;\n  engine;\n  evaler;\n  engineStatus: EngineStatus;\n  displayScore:boolean;\n  time:Time;\n  playerColor;\n  clockTimeoutID;\n  isEngineRunning:boolean;\n  announced_game_over;\n  //computerThinking : boolean;\n  computerStatus : string;\n  playerStatus : string;\n  private chessClock: ChessClock;\n  public whiteTime:string;\n  public blackTime:string;\n\n  constructor(private dialog:MatDialog, public breakpointObserver: BreakpointObserver) {\n    this.engine = new Worker(\"/assets/js/stockfish.js\");\n    this.evaler = new Worker(\"/assets/js/stockfish.js\");\n    this.displayScore = false;\n    this.time = new Time();\n    this.clockTimeoutID = null;\n    this.isEngineRunning = false;\n    this.chessClock = new ChessClock(0,15,0);\n    this.isMobileScreen =  breakpointObserver.isMatched('(max-width: 1200px)');\n    setInterval(()=>{\n      /* Time Interval to update the clock during play*/\n      this.whiteTime = this.chessClock.whiteClock.getTime();\n      this.blackTime = this.chessClock.blackClock.getTime();\n    }, 1000);\n   }\n\n  ngOnInit(): void {\n    const self = this;\n    this.engineStatus = new EngineStatus();\n    this.game = new Chess();//'rnb1kbnr/pppp1ppp/8/4p3/5PPq/8/PPPPP2P/RNBQKBNR w KQkq - 1 3'\n    this.board = ChessBoard('chessBoard',{\n      draggable: true,\n      position: 'start',\n      onDragStart: function (source, piece, position, orientation) { \n        return self.onDragStart(source, piece, position, orientation); \n      },\n      onDrop: function (source, target, piece, newPos, oldPos, orientation) { \n        return self.onDrop(source, target); \n      },\n      onSnapEnd: function (source, target, piece) { \n        self.onSnapEnd(); \n      }\n    });\n    this.setPlayerColor('white');\n    self.displayStatus;\n    self.uciCmd('uci');\n\n    self.evaler.onmessage = function evalerOnmessage(event) {\n      return self.evalerOnmessage(event);\n    }\n    \n    \n    self.engine.onmessage = function engineOnmessage(event) {\n      return self.engineOnmessage(event);\n    }\n   \n\n    self.start();\n\n    this.chessClock = new ChessClock(0,15,0);\n    \n  }\n\n  private onDragStart (source, piece, position, orientation) {\n    var re = this.playerColor == 'white' ? /^b/ : /^w/\n        if (this.game.game_over() ||\n            piece.search(re) !== -1) {\n            return false;\n        }\n  };\n\n  private uciCmd(cmd, which?:any) {\n    console.log(\"UCI: \" + cmd);\n    \n    (which || this.engine).postMessage(cmd);\n  }\n\n  private displayStatus() {\n    var status = 'Engine: ';\n    if(!this.engineStatus.engineLoaded) {\n        status += 'loading...';\n    } else if(!this.engineStatus.engineReady) {\n        status += 'loaded...';\n    } else {\n        status += 'ready.';\n    }\n    \n    if(this.engineStatus.search) {\n        status += '<br>' +this.engineStatus.search;\n        if(this.engineStatus.score && this.displayScore) {\n            status += (this.engineStatus.score.substr(0, 4) === \"Mate\" ? \" \" : ' Score: ') + this.engineStatus.score;\n        }\n    }\n  }\n\n  private get_moves()\n    {\n        var moves = '';\n        var history = this.game.history({verbose: true});\n        \n        for(var i = 0; i < history.length; ++i) {\n            var move = history[i];\n            moves += ' ' + move.from + move.to + (move.promotion ? move.promotion : '');\n        }\n        \n        return moves;\n    }\n\n    private prepareMove() {\n      this.playerStatus = \"\";\n      this.computerStatus = \"\";\n      this.pgn = this.game.pgn();\n      this.board.position(this.game.fen());\n      var turn = this.game.turn() == 'w' ? 'white' : 'black';\n      if(!this.game.game_over()) {\n          if(turn != this.playerColor) {\n              this.uciCmd('position startpos moves' + this.get_moves());\n              this.uciCmd('position startpos moves' + this.get_moves(), this.evaler);\n              this.uciCmd(\"eval\", this.evaler);\n              \n              if (this.time && this.chessClock) {\n                  this.uciCmd(\"go \" + (this.time.depth ? \"depth \" + this.time.depth : \"\") + \" wtime \" + this.chessClock.whiteClock.getMilliSeconds() + \" winc \" + 0 + \" btime \" + this.chessClock.blackClock.getMilliSeconds() + \" binc \" + 0);\n              } else {\n                this.uciCmd(\"go \" + (this.time.depth ? \"depth \" + this.time.depth : \"\"));\n              }\n              this.isEngineRunning = true;\n          }\n      } if(this.game.in_checkmate()){\n        this.dialog.open(ChessDialogComponent, {\n          width: '70%',\n          data : {reason : \"CheckMate\"}\n        });\n      } else if(this.game.in_check()){\n        if(turn == \"white\"){\n          this.playerStatus = \"Check\";\n        } else if(turn == \"black\"){\n          this.computerStatus = \"Check\";\n        }\n      } else if(this.game.in_draw() || this.game.in_threefold_repetition()){\n        this.dialog.open(ChessDialogComponent, {\n          width: '70%',\n          data : {reason : \"Draw\"}\n        });\n      } else if(this.game.in_stalemate()){\n        this.dialog.open(ChessDialogComponent, {\n          width: '70%',\n          data : {reason : \"Stalemate\"}\n        });\n      } else if(this.game.insufficient_material()){\n        this.dialog.open(ChessDialogComponent, {\n          width: '70%',\n          data : {reason : \"Draw - Insufficient Material\"}\n        });\n      }\n  }\n\n  private evalerOnmessage(event) {\n    var line;\n    \n    if (event && typeof event === \"object\") {\n        line = event.data;\n    } else {\n        line = event;\n    }\n    \n    console.log(\"evaler: \" + line);\n    \n    /// Ignore some output.\n    if (line === \"uciok\" || line === \"readyok\" || line.substr(0, 11) === \"option name\") {\n        return;\n    }\n  }\n\n  private engineOnmessage(event) {\n    var line;\n    \n    if (event && typeof event === \"object\") {\n        line = event.data;\n    } else {\n        line = event;\n    }\n    console.log(\"Reply: \" + line)\n    if(line == 'uciok') {\n        this.engineStatus.engineLoaded = true;\n    } else if(line == 'readyok') {\n      this.engineStatus.engineReady = true;\n    } else {\n        var match = line.match(/^bestmove ([a-h][1-8])([a-h][1-8])([qrbn])?/);\n        /// Did the AI move?\n        if(match) {\n          this.isEngineRunning = false;\n          this.game.move({from: match[1], to: match[2], promotion: match[3]});\n          this.prepareMove();\n          this.uciCmd(\"eval\",  this.evaler);\n            this.stopPlayer2Clock();\n            //uciCmd(\"eval\");\n        /// Is it sending feedback?\n        } else if(match = line.match(/^info .*\\bdepth (\\d+) .*\\bnps (\\d+)/)) {\n          this.engineStatus.search = 'Depth: ' + match[1] + ' Nps: ' + match[2];\n        }\n        \n        /// Is it sending feed back with a score?\n        if(match = line.match(/^info .*\\bscore (\\w+) (-?\\d+)/)) {\n            var score = parseInt(match[2]) * ( this.game.turn() == 'w' ? 1 : -1);\n            /// Is it measuring in centipawns?\n            if(match[1] == 'cp') {\n              this.engineStatus.score = (score / 100.0).toFixed(2);\n            /// Did it find a mate?\n            } else if(match[1] == 'mate') {\n              this.engineStatus.score = 'Mate in ' + Math.abs(score);\n            }\n            \n            /// Is the score bounded?\n            if(match = line.match(/\\b(upper|lower)bound\\b/)) {\n              this.engineStatus.score = ((match[1] == 'upper') == ( this.game.turn() == 'w') ? '<= ' : '>= ') +  this.engineStatus.score\n            }\n        }\n    }\n    this.displayStatus;\n  };\n\n  private onDrop (source, target) {\n    // see if the move is legal\n    var move = this.game.move({\n        from: source,\n        to: target,\n        promotion: 'q' // NOTE: always promote to a queen for example simplicity\n    });\n\n    // illegal move\n    if (move === null) return 'snapback';\n\n    this.prepareMove();\n    this.stopPlayer1Clock();\n  };\n\n  private onSnapEnd() {\n    this.board.position(this.game.fen());\n  };  \n\n  public reset(){\n    this.uciCmd('setoption name Contempt value 0');\n    //uciCmd('setoption name Skill Level value 20');\n    this.setSkillLevel(20);\n    this.uciCmd('setoption name King Safety value 0'); /// Agressive 100 (it's now symetric)\n  }\n\n  public loadpgn(pgn){\n    this.game.load_pgn(pgn);\n  }\n\n  public setPlayerColor(color){\n    this.playerColor = color;\n    this.board.orientation(this.playerColor);\n  }\n\n  public setSkillLevel(skill){\n    var max_err, err_prob, difficulty_slider;\n            \n            if (skill < 0) {\n                skill = 0;\n            }\n            if (skill > 20) {\n                skill = 20;\n            }\n            \n            this.time.level = skill;\n            \n            /// Change thinking depth allowance.\n            if (skill < 5) {\n                this.time.depth = \"1\";\n            } else if (skill < 10) {\n                this.time.depth = \"2\";\n            } else if (skill < 15) {\n                this.time.depth = \"3\";\n            } else {\n                /// Let the engine decide.\n                this.time.depth = \"\";\n            }\n            \n            this.uciCmd('setoption name Skill Level value ' + skill);\n            \n            ///NOTE: Stockfish level 20 does not make errors (intentially), so these numbers have no effect on level 20.\n            /// Level 0 starts at 1\n            err_prob = Math.round((skill * 6.35) + 1);\n            /// Level 0 starts at 10\n            max_err = Math.round((skill * -0.5) + 10);\n            \n            this.uciCmd('setoption name Skill Level Maximum Error value ' + max_err);\n            this.uciCmd('setoption name Skill Level Probability value ' + err_prob);\n  }\n\n\n  public setDepth(depth){\n    this.time = new Time();\n    this.time.depth = depth;\n  }\n\n  public setNodes(nodes){\n    this.time = new Time();\n    this.time.nodes = nodes;\n  }\n\n  public setContempt(contempt){\n    this.uciCmd('setoption name Contempt value ' + contempt);\n  }\n\n  public setAggressiveness(value){\n    this.uciCmd('setoption name Aggressiveness value ' + value);\n  }\n\n  public setDisplayScore(flag){\n    this.displayScore = flag;\n    this.displayStatus();\n  }\n\n  public start(){\n    this.uciCmd('ucinewgame');\n    this.uciCmd('isready');\n    this.engineStatus.engineReady = false;\n    this.engineStatus.search = null;\n    this.displayStatus();\n    this.setSkillLevel(20);\n    this.prepareMove();\n    this.announced_game_over = false;\n  }\n\n  public undo(){\n    if(this.isEngineRunning)\n                return false;\n    this.game.undo();\n    this.game.undo();\n    this.engineStatus.search = null;\n    this.displayStatus();\n    this.prepareMove();\n    return true;\n  }\n\n  public newGame(){\n    this.ngOnInit();\n  }\n\n  public switchColor(){\n    if(!this.isEngineRunning){\n      this.stopPlayer1Clock();\n      if(this.playerColor == \"white\") {\n        this.setPlayerColor(\"black\");\n      }\n      else if(this.playerColor == \"black\") {\n        this.setPlayerColor(\"white\");\n      }\n      this.start();\n    } else {\n      console.log(\"Let the Computer Stop Thinking\");\n    }\n    \n  }\n\n  private stopPlayer1Clock(){\n    this.chessClock.startWhitePlay();\n    this.chessClock.stop(\"white\");\n  }\n\n  private stopPlayer2Clock(){\n    this.chessClock.startBlackPlay();\n    this.chessClock.stop(\"black\");\n  }\n\n}\n\nclass EngineStatus{\n  public engineReady: boolean;\n  public engineLoaded : boolean;\n  public search : string;\n  public score : string;\n}\n\nclass Time {\n  public depth : string;\n  public nodes : string;\n  public level : number;\n\n}\n\nclass Clock{\n  public hours: number;\n  public minutes : number;\n  public seconds : number;\n  private timeoutId:any;\n\n  constructor(hours:number, minutes:number, seconds:number){\n    this.hours = hours;\n    this.minutes = minutes;\n    this.seconds = seconds;\n  }\n\n  public start(){\n    this.timeoutId = setInterval(()=>{\n     if(--this.seconds <= 0){\n        if(--this.minutes < 0){\n          if(--this.hours < 0){\n            console.log(\"Game Over\");\n          } else {\n            this.minutes = 59;\n            this.seconds = 60;\n          }\n        } else {\n          this.seconds = 60;\n        }\n      }\n    }, 1000);\n  }\n\n  public stop(){\n    if(this.timeoutId)\n      clearTimeout(this.timeoutId);\n  }\n\n  public getTime(){\n    var hours:string;\n    var minutes:string;\n    var seconds:string;\n\n    if(this.hours !=undefined && this.hours.toString().length == 1){\n      hours = \"0\" + this.hours;\n    } else if(this.hours !=undefined && this.hours.toString().length == 2){\n      hours = this.hours.toString();\n    }\n\n    if(this.minutes !=undefined && this.minutes.toString().length==1){\n      minutes = \"0\" + this.minutes;\n    } else if(this.minutes !=undefined && this.minutes.toString().length == 2){\n      minutes = this.minutes.toString();\n    }\n\n    if(this.seconds !=undefined && this.seconds.toString().length==1){\n      seconds = \"0\" + this.seconds;\n    } else if(this.seconds !=undefined && this.seconds.toString().length == 2){\n      seconds = this.seconds.toString();\n    }\n    return hours + \":\" + minutes + \":\" + seconds;\n  }\n\n  public getMilliSeconds(){\n    var totalSeconds = this.hours*60*60 + this.minutes*60 + this.seconds;\n\n    return totalSeconds * 1000;\n  }\n}\n\nclass ChessClock{\n  public whiteClock: Clock;\n  public blackClock : Clock;\n  private isWhitePlayStarted : boolean;\n  private isBlackPlayStarted : boolean;\n\n  constructor(hours:number, minutes:number, seconds:number){\n    this.whiteClock = new Clock(hours, minutes, seconds);\n    this.blackClock = new Clock(hours, minutes, seconds);\n  }\n  \n\n  public stop(stopColor:string){\n    if(stopColor == \"white\" && this.isBlackPlayStarted){\n      this.whiteClock.stop();\n      this.blackClock.start();\n    } else if (stopColor == \"black\" && this.isWhitePlayStarted){\n      this.blackClock.stop();\n      this.whiteClock.start();\n    }\n  }\n\n  public startWhitePlay(){\n    this.isWhitePlayStarted = true;\n  }\n\n  public startBlackPlay(){\n    this.isBlackPlayStarted = true;\n  }\n\n}\n","<div>\n      <div class=\"GMPlayArea\">\n        <div class=\"computer\">\n            <div class=\"line1\">\n                <h2>Pemela(Computer Engine)</h2>\n                <h5 id=\"computerStatus\">{{computerStatus}}</h5>\n            </div>\n            <div class=\"line2\">\n                <span id=\"computerTime\">{{blackTime}}</span>\n                <mat-progress-bar mode=\"indeterminate\" class=\"computerProgressBar\" *ngIf=\"isEngineRunning\"></mat-progress-bar>\n            </div>\n        </div>\n        <div id=\"chessBoard\"></div>\n        <div class=\"action\">\n            <button mat-flat-button color=\"accent\" (click)=\"undo()\" [disabled]=\"isEngineRunning\">\n                <mat-icon>replay</mat-icon>\n                <span *ngIf=\"!isMobileScreen\">Undo</span>\n            </button>\n            <button mat-flat-button color=\"accent\" (click)=\"newGame()\" [disabled]=\"isEngineRunning\">\n                <mat-icon>autorenew</mat-icon>\n                <span *ngIf=\"!isMobileScreen\">New Game</span>\n            </button>\n            <button mat-flat-button color=\"accent\" (click)=\"switchColor()\" [disabled]=\"isEngineRunning\">\n                <mat-icon>import_export</mat-icon>\n                <span *ngIf=\"!isMobileScreen\">Flip Board</span>\n            </button>\n        </div>\n        <div class=\"player\">\n            <div class=\"line1\">\n                <span id=\"playerTime\">{{whiteTime}}</span>\n            </div>\n            <div class=\"line2\">\n                <h2>You</h2>\n                <h5 id=\"playerStatus\">{{playerStatus}}</h5>\n            </div>\n        </div>\n        <br>\n        \n      </div>\n      <br><br><br>\n\n    <div class=\"moves\">\n        <hr>\n        <h3>Moves:</h3>\n        <div id=\"pgn\">{{pgn}}</div>\n        <hr>\n    </div>\n    <div class=\"settings\">\n       \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>register works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}