{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/game/game.component.ts","webpack:///src/app/game/game.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/play-with-computer-settings/play-with-computer-settings.component.ts","webpack:///src/app/play-with-computer-settings/play-with-computer-settings.component.html","webpack:///src/app/play-with-computer/play-with-computer.component.ts","webpack:///src/app/play-with-computer/play-with-computer.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","GameComponent","self","game","board","ChessBoard","draggable","position","onDragStart","source","piece","orientation","onDrop","target","newPos","oldPos","onSnapEnd","updateStatus","game_over","turn","search","move","from","to","promotion","fen","status","moveColor","in_checkmate","in_draw","in_check","pgn","LoginComponent","MenuComponent","PlayWithComputerSettingsComponent","PlayWithComputerComponent","engine","Worker","evaler","displayScore","time","Time","playerColor","clockTimeoutID","isEngineRunning","computerThinking","chessClock","ChessClock","setInterval","whiteTime","whiteClock","getTime","blackTime","blackClock","engineStatus","EngineStatus","displayStatus","uciCmd","onmessage","evalerOnmessage","event","engineOnmessage","start","re","cmd","which","console","log","postMessage","engineLoaded","engineReady","score","substr","moves","history","verbose","i","length","get_moves","depth","getMilliSeconds","line","data","match","prepareMove","stopBlackClock","parseInt","toFixed","Math","abs","stopWhiteClock","setSkillLevel","load_pgn","color","skill","max_err","err_prob","difficulty_slider","level","round","nodes","contempt","value","flag","announced_game_over","undo","ngOnInit","startWhitePlay","stop","startBlackPlay","newGame","Clock","hours","minutes","seconds","timeoutId","clearTimeout","undefined","toString","totalSeconds","stopColor","isBlackPlayStarted","isWhitePlayStarted","RegisterComponent","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,0BAAR;AAAoCC,eAAS,EAAE;AAA/C,KADqB,EAErB;AAAED,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KAFqB,EAGrB;AAAED,UAAI,EAAE,YAAR;AAAsBC,eAAS,EAAE;AAAjC,KAHqB,CAAvB;;QAUaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBG,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBJ,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AChB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaQ,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,WAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;;;;;;;;sEDOaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAyCaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAVJ,CACP,uEADO,EAEP,oEAFO,EAGP,6FAHO,EAIP,0EAJO,EAKP,wEALO,EAMP,oEANO,EAOP,oEAPO,EAQP,mFARO,CAUI;;;;0HAGFA,S,EAAS;AAAA,uBArBlB,2DAqBkB,EApBlB,kEAoBkB,EAnBlB,sEAmBkB,EAlBlB,+EAkBkB,EAjBlB,2GAiBkB,EAhBlB,qIAgBkB,EAflB,mEAekB;AAfL,kBAGb,uEAHa,EAIb,oEAJa,EAKb,6FALa,EAMb,0EANa,EAOb,wEAPa,EAQb,oEARa,EASb,oEATa,EAUb,mFAVa;AAeK,O;AALE,K;;;;;sEAKXA,S,EAAS;cAvBrB,sDAuBqB;eAvBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,kEAFY,EAGZ,sEAHY,EAIZ,+EAJY,EAKZ,2GALY,EAMZ,qIANY,EAOZ,mEAPY,CADN;AAURP,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,6FAHO,EAIP,0EAJO,EAKP,wEALO,EAMP,oEANO,EAOP,oEAPO,EAQP,mFARO,CAVD;AAoBRQ,mBAAS,EAAE,EApBH;AAqBRC,mBAAS,EAAE,CAAC,2DAAD;AArBH,S;AAuBY,Q;;;;;;;;;;;;;;;;;;ACzCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;QASaC,a;AAOX,+BAAc;AAAA;AAAG;;;;mCAET;AACN,cAAMC,IAAI,GAAG,IAAb;AACA,eAAKC,IAAL,GAAY,IAAI,qCAAJ,EAAZ;AACD,eAAKC,KAAL,GAAaC,UAAU,CAAC,YAAD,EAAc;AAClCC,qBAAS,EAAE,IADuB;AAElCC,oBAAQ,EAAE,OAFwB;AAGlCC,uBAAW,EAAE,qBAAUC,MAAV,EAAkBC,KAAlB,EAAyBH,QAAzB,EAAmCI,WAAnC,EAAgD;AAC3D,qBAAOT,IAAI,CAACM,WAAL,CAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCH,QAAhC,EAA0CI,WAA1C,CAAP;AACD,aALiC;AAMlCC,kBAAM,EAAE,gBAAUH,MAAV,EAAkBI,MAAlB,EAA0BH,KAA1B,EAAiCI,MAAjC,EAAyCC,MAAzC,EAAiDJ,WAAjD,EAA8D;AACpE,qBAAOT,IAAI,CAACU,MAAL,CAAYH,MAAZ,EAAoBI,MAApB,CAAP;AACD,aARiC;AASlCG,qBAAS,EAAE,mBAAUP,MAAV,EAAkBI,MAAlB,EAA0BH,KAA1B,EAAiC;AAC1CR,kBAAI,CAACc,SAAL;AACD;AAXiC,WAAd,CAAvB;AAaC,eAAKC,YAAL;AACD;;;oCAEoBR,M,EAAQC,K,EAAOH,Q,EAAUI,W,EAAa;AACzD;AACA;AACA;AAEA,cAAI,KAAKR,IAAL,CAAUe,SAAV,EAAJ,EAA2B,OAAO,KAAP,CAL8B,CAOzD;;AACA,cAAK,KAAKf,IAAL,CAAUgB,IAAV,OAAqB,GAArB,IAA4BT,KAAK,CAACU,MAAN,CAAa,IAAb,MAAuB,CAAC,CAArD,IACC,KAAKjB,IAAL,CAAUgB,IAAV,OAAqB,GAArB,IAA4BT,KAAK,CAACU,MAAN,CAAa,IAAb,MAAuB,CAAC,CADzD,EAC6D;AAC3D,mBAAO,KAAP;AACD;AACF;;;+BAEeX,M,EAAQI,M,EAAQ;AAC9B;AACA,cAAIQ,IAAI,GAAG,KAAKlB,IAAL,CAAUkB,IAAV,CAAe;AACxBC,gBAAI,EAAEb,MADkB;AAExBc,cAAE,EAAEV,MAFoB;AAGxBW,qBAAS,EAAE,GAHa,CAGT;;AAHS,WAAf,CAAX,CAF8B,CAQ9B;;AACA,cAAIH,IAAI,KAAK,IAAb,EACE,OAAO,UAAP;AACF,eAAKJ,YAAL;AACD;;;oCAEgB;AACf,eAAKb,KAAL,CAAWG,QAAX,CAAoB,KAAKJ,IAAL,CAAUsB,GAAV,EAApB,EADe,CAEf;AACD;;;uCAEsB;AACrB,cAAIC,MAAM,GAAG,EAAb;AAEA,cAAIC,SAAS,GAAG,OAAhB;;AACA,cAAI,KAAKxB,IAAL,CAAUgB,IAAV,OAAqB,GAAzB,EAA8B;AAC5BQ,qBAAS,GAAG,OAAZ;AACD,WANoB,CAQrB;;;AACA,cAAI,KAAKxB,IAAL,CAAUyB,YAAV,EAAJ,EAA8B;AAC5BF,kBAAM,GAAG,gBAAgBC,SAAhB,GAA4B,mBAArC;AACD,WAFD,CAIA;AAJA,eAKK,IAAI,KAAKxB,IAAL,CAAU0B,OAAV,EAAJ,EAAyB;AAC5BH,oBAAM,GAAG,2BAAT;AACD,aAFI,CAIL;AAJK,iBAKA;AACHA,sBAAM,GAAGC,SAAS,GAAG,UAArB,CADG,CAGH;;AACA,oBAAI,KAAKxB,IAAL,CAAU2B,QAAV,EAAJ,EAA0B;AACxBJ,wBAAM,IAAI,OAAOC,SAAP,GAAmB,cAA7B;AACD;AACF;;AAED,eAAKD,MAAL,GAAcA,MAAd;AACA,eAAKK,GAAL,GAAW,KAAK5B,IAAL,CAAU4B,GAAV,EAAX;AACD;;;;;;;uBA3FU9B,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,yD;AAAA;AAAA;ACT1B;;AACA;;;;AADA;;;;;;;;sEDSaA,a,EAAa;cALzB,uDAKyB;eALf;AACTP,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AET1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaoC,c;AAEX,gCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA;AAAA;ACP3B;;AAAG;;AAAY;;;;;;;;sEDOFA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTtC,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaqC,a;AAEX,+BAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,2U;AAAA;AAAA;;;ACP1B;;AACI;;AACI;;AACI;;AACA;;AAAuB;;AAAe;;AAC1C;;AACA;;AACI;;AAEI;;AAAyC;;AAAkB;;AAE/D;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAuC;AAAA;;AAAA;;AAAA,mBAAS,YAAT;AAAyB,WAAzB;;AACnC;;AAAU;;AAAI;;AAClB;;AACA;;AAAkB;;AAAQ;;AAC9B;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;;;;;;;;sEDlBaA,a,EAAa;cALzB,uDAKyB;eALf;AACTvC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOasC,iC;AAEX,mDAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,iC;AAAiC,K;;;YAAjCA,iC;AAAiC,sD;AAAA,e;AAAA,a;AAAA,gmC;AAAA;AAAA;ACP9C;;AACI;;AACE;;AAAuE;;AAAe;;AACtF;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAsE;;AAAe;;AACrF;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAyE;;AAAkB;;AAC3F;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAoE;;AAAM;;AAC1E;;AACE;;AACE;;AAAuD;;AAAiC;;AAAK;;AAC7F;;AAAgD;;AAAiC;;AAAK;;AACxF;;AACF;;AACF;;AACA;;AACE;;AAAwE;;AAAU;;AAClF;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;;AACE;;AAA6D;;AAAQ;;AACvE;;AACF;;AAEA;;AACE;;AAAoE;;AAAU;;AAC9E;;AACE;;AACE;;AAAyB;;AAAK;;AAC9B;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAM;;AACxB;;AACF;;AACF;;AACF;;;;;;;;;sED7CWA,iC,EAAiC;cAL7C,uDAK6C;eALnC;AACTxC,kBAAQ,EAAE,iCADD;AAETC,qBAAW,EAAE,8CAFJ;AAGTC,mBAAS,EAAE,CAAC,6CAAD;AAHF,S;AAKmC,Q;;;;;;;;;;;;;;;;;;;;AEP9C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKY;;;;QDKCuC,yB;AAmBX,2CAAc;AAAA;;AAAA;;AACZ,aAAKC,MAAL,GAAc,IAAIC,MAAJ,CAAW,yBAAX,CAAd;AACA,aAAKC,MAAL,GAAc,IAAID,MAAJ,CAAW,yBAAX,CAAd;AACA,aAAKE,YAAL,GAAoB,KAApB;AACA,aAAKC,IAAL,GAAY,IAAIC,IAAJ,EAAZ;AACA,aAAKC,WAAL,GAAmB,OAAnB;AACA,aAAKC,cAAL,GAAsB,IAAtB;AACA,aAAKC,eAAL,GAAuB,KAAvB;AACA,aAAKC,gBAAL,GAAwB,KAAxB;AACA,aAAKC,UAAL,GAAkB,IAAIC,UAAJ,CAAe,CAAf,EAAiB,EAAjB,EAAoB,CAApB,CAAlB;AAEAC,mBAAW,CAAC,YAAI;AACd;AACA,eAAI,CAACC,SAAL,GAAiB,KAAI,CAACH,UAAL,CAAgBI,UAAhB,CAA2BC,OAA3B,EAAjB;AACA,eAAI,CAACC,SAAL,GAAiB,KAAI,CAACN,UAAL,CAAgBO,UAAhB,CAA2BF,OAA3B,EAAjB;AACD,SAJU,EAIR,IAJQ,CAAX;AAKA;;;;mCAEM;AACN,cAAMjD,IAAI,GAAG,IAAb;AACA,eAAKoD,YAAL,GAAoB,IAAIC,YAAJ,EAApB;AACA,eAAKpD,IAAL,GAAY,IAAI,qCAAJ,EAAZ;AACA,eAAKC,KAAL,GAAaC,UAAU,CAAC,YAAD,EAAc;AACnCC,qBAAS,EAAE,IADwB;AAEnCC,oBAAQ,EAAE,OAFyB;AAGnCC,uBAAW,EAAE,qBAAUC,MAAV,EAAkBC,KAAlB,EAAyBH,QAAzB,EAAmCI,WAAnC,EAAgD;AAC3D,qBAAOT,IAAI,CAACM,WAAL,CAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCH,QAAhC,EAA0CI,WAA1C,CAAP;AACD,aALkC;AAMnCC,kBAAM,EAAE,gBAAUH,MAAV,EAAkBI,MAAlB,EAA0BH,KAA1B,EAAiCI,MAAjC,EAAyCC,MAAzC,EAAiDJ,WAAjD,EAA8D;AACpE,qBAAOT,IAAI,CAACU,MAAL,CAAYH,MAAZ,EAAoBI,MAApB,CAAP;AACD,aARkC;AASnCG,qBAAS,EAAE,mBAAUP,MAAV,EAAkBI,MAAlB,EAA0BH,KAA1B,EAAiC;AAC1CR,kBAAI,CAACc,SAAL;AACD;AAXkC,WAAd,CAAvB;AAaAd,cAAI,CAACsD,aAAL;AACAtD,cAAI,CAACuD,MAAL,CAAY,KAAZ;;AAEAvD,cAAI,CAACoC,MAAL,CAAYoB,SAAZ,GAAwB,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AACtD,mBAAO1D,IAAI,CAACyD,eAAL,CAAqBC,KAArB,CAAP;AACD,WAFD;;AAKA1D,cAAI,CAACkC,MAAL,CAAYsB,SAAZ,GAAwB,SAASG,eAAT,CAAyBD,KAAzB,EAAgC;AACtD,mBAAO1D,IAAI,CAAC2D,eAAL,CAAqBD,KAArB,CAAP;AACD,WAFD;;AAKA1D,cAAI,CAAC4D,KAAL;AACD;;;oCAEoBrD,M,EAAQC,K,EAAOH,Q,EAAUI,W,EAAa;AACzD,cAAIoD,EAAE,GAAG,KAAKrB,WAAL,IAAoB,OAApB,GAA8B,IAA9B,GAAqC,IAA9C;;AACI,cAAI,KAAKvC,IAAL,CAAUe,SAAV,MACAR,KAAK,CAACU,MAAN,CAAa2C,EAAb,MAAqB,CAAC,CAD1B,EAC6B;AACzB,mBAAO,KAAP;AACH;AACN;;;+BAEcC,G,EAAKC,K,EAAY;AAC9BC,iBAAO,CAACC,GAAR,CAAY,UAAUH,GAAtB;AAEA,WAACC,KAAK,IAAI,KAAK7B,MAAf,EAAuBgC,WAAvB,CAAmCJ,GAAnC;AACD;;;wCAEuB;AACtB,cAAItC,MAAM,GAAG,UAAb;;AACA,cAAG,CAAC,KAAK4B,YAAL,CAAkBe,YAAtB,EAAoC;AAChC3C,kBAAM,IAAI,YAAV;AACH,WAFD,MAEO,IAAG,CAAC,KAAK4B,YAAL,CAAkBgB,WAAtB,EAAmC;AACtC5C,kBAAM,IAAI,WAAV;AACH,WAFM,MAEA;AACHA,kBAAM,IAAI,QAAV;AACH;;AAED,cAAG,KAAK4B,YAAL,CAAkBlC,MAArB,EAA6B;AACzBM,kBAAM,IAAI,SAAQ,KAAK4B,YAAL,CAAkBlC,MAApC;;AACA,gBAAG,KAAKkC,YAAL,CAAkBiB,KAAlB,IAA2B,KAAKhC,YAAnC,EAAiD;AAC7Cb,oBAAM,IAAI,CAAC,KAAK4B,YAAL,CAAkBiB,KAAlB,CAAwBC,MAAxB,CAA+B,CAA/B,EAAkC,CAAlC,MAAyC,MAAzC,GAAkD,GAAlD,GAAwD,UAAzD,IAAuE,KAAKlB,YAAL,CAAkBiB,KAAnG;AACH;AACJ;AACF;AAED;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;AAKA;;;;;;AAMA;;;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;;;;oCAYiB;AAEX,cAAIE,KAAK,GAAG,EAAZ;AACA,cAAIC,OAAO,GAAG,KAAKvE,IAAL,CAAUuE,OAAV,CAAkB;AAACC,mBAAO,EAAE;AAAV,WAAlB,CAAd;;AAEA,eAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,OAAO,CAACG,MAA3B,EAAmC,EAAED,CAArC,EAAwC;AACpC,gBAAIvD,IAAI,GAAGqD,OAAO,CAACE,CAAD,CAAlB;AACAH,iBAAK,IAAI,MAAMpD,IAAI,CAACC,IAAX,GAAkBD,IAAI,CAACE,EAAvB,IAA6BF,IAAI,CAACG,SAAL,GAAiBH,IAAI,CAACG,SAAtB,GAAkC,EAA/D,CAAT;AACH;;AAED,iBAAOiD,KAAP;AACH;;;sCAEqB;AACrB;AACC,eAAK1C,GAAL,GAAW,KAAK5B,IAAL,CAAU4B,GAAV,EAAX;AACA,eAAK3B,KAAL,CAAWG,QAAX,CAAoB,KAAKJ,IAAL,CAAUsB,GAAV,EAApB,EAHoB,CAIpB;;AACA,cAAIN,IAAI,GAAG,KAAKhB,IAAL,CAAUgB,IAAV,MAAoB,GAApB,GAA0B,OAA1B,GAAoC,OAA/C;;AACA,cAAG,CAAC,KAAKhB,IAAL,CAAUe,SAAV,EAAJ,EAA2B;AACvB,gBAAGC,IAAI,IAAI,KAAKuB,WAAhB,EAA6B;AACzB,mBAAKe,MAAL,CAAY,4BAA4B,KAAKqB,SAAL,EAAxC;AACA,mBAAKrB,MAAL,CAAY,4BAA4B,KAAKqB,SAAL,EAAxC,EAA0D,KAAKxC,MAA/D;AACA,mBAAKmB,MAAL,CAAY,MAAZ,EAAoB,KAAKnB,MAAzB;;AAEA,kBAAI,KAAKE,IAAL,IAAa,KAAKM,UAAtB,EAAkC;AAC9B,qBAAKW,MAAL,CAAY,SAAS,KAAKjB,IAAL,CAAUuC,KAAV,GAAkB,WAAW,KAAKvC,IAAL,CAAUuC,KAAvC,GAA+C,EAAxD,IAA8D,SAA9D,GAA0E,KAAKjC,UAAL,CAAgBI,UAAhB,CAA2B8B,eAA3B,EAA1E,GAAyH,QAAzH,GAAoI,CAApI,GAAwI,SAAxI,GAAoJ,KAAKlC,UAAL,CAAgBO,UAAhB,CAA2B2B,eAA3B,EAApJ,GAAmM,QAAnM,GAA8M,CAA1N;AACH,eAFD,MAEO;AACL,qBAAKvB,MAAL,CAAY,SAAS,KAAKjB,IAAL,CAAUuC,KAAV,GAAkB,WAAW,KAAKvC,IAAL,CAAUuC,KAAvC,GAA+C,EAAxD,CAAZ;AACD;;AACD,mBAAKnC,eAAL,GAAuB,IAAvB;AACH;AACJ;AACJ;;;wCAEuBgB,K,EAAO;AAC7B,cAAIqB,IAAJ;;AAEA,cAAIrB,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;AACpCqB,gBAAI,GAAGrB,KAAK,CAACsB,IAAb;AACH,WAFD,MAEO;AACHD,gBAAI,GAAGrB,KAAP;AACH;;AAEDM,iBAAO,CAACC,GAAR,CAAY,aAAac,IAAzB,EAT6B,CAW7B;;AACA,cAAIA,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,SAA7B,IAA0CA,IAAI,CAACT,MAAL,CAAY,CAAZ,EAAe,EAAf,MAAuB,aAArE,EAAoF;AAChF;AACH;AACF;;;wCAEuBZ,K,EAAO;AAC7B,eAAKf,gBAAL,GAAwB,IAAxB;AACA,cAAIoC,IAAJ;;AAEA,cAAIrB,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;AACpCqB,gBAAI,GAAGrB,KAAK,CAACsB,IAAb;AACH,WAFD,MAEO;AACHD,gBAAI,GAAGrB,KAAP;AACH;;AACDM,iBAAO,CAACC,GAAR,CAAY,YAAYc,IAAxB;;AACA,cAAGA,IAAI,IAAI,OAAX,EAAoB;AAChB,iBAAK3B,YAAL,CAAkBe,YAAlB,GAAiC,IAAjC;AACA,iBAAKxB,gBAAL,GAAwB,KAAxB;AACH,WAHD,MAGO,IAAGoC,IAAI,IAAI,SAAX,EAAsB;AAC3B,iBAAK3B,YAAL,CAAkBgB,WAAlB,GAAgC,IAAhC;AACA,iBAAKzB,gBAAL,GAAwB,KAAxB;AACD,WAHM,MAGA;AACH,gBAAIsC,KAAK,GAAGF,IAAI,CAACE,KAAL,CAAW,6CAAX,CAAZ,CADG,CAEH;;AACA,gBAAGA,KAAH,EAAU;AACR,mBAAKvC,eAAL,GAAuB,KAAvB;AACA,mBAAKzC,IAAL,CAAUkB,IAAV,CAAe;AAACC,oBAAI,EAAE6D,KAAK,CAAC,CAAD,CAAZ;AAAiB5D,kBAAE,EAAE4D,KAAK,CAAC,CAAD,CAA1B;AAA+B3D,yBAAS,EAAE2D,KAAK,CAAC,CAAD;AAA/C,eAAf;AACA,mBAAKC,WAAL;AACA,mBAAK3B,MAAL,CAAY,MAAZ,EAAqB,KAAKnB,MAA1B;AACA,mBAAKO,gBAAL,GAAwB,KAAxB;AACA,mBAAKwC,cAAL,GANQ,CAON;AACJ;AACC,aATD,MASO,IAAGF,KAAK,GAAGF,IAAI,CAACE,KAAL,CAAW,qCAAX,CAAX,EAA8D;AACnE,mBAAK7B,YAAL,CAAkBlC,MAAlB,GAA2B,YAAY+D,KAAK,CAAC,CAAD,CAAjB,GAAuB,QAAvB,GAAkCA,KAAK,CAAC,CAAD,CAAlE;AACD,aAdE,CAgBH;;;AACA,gBAAGA,KAAK,GAAGF,IAAI,CAACE,KAAL,CAAW,+BAAX,CAAX,EAAwD;AACpD,kBAAIZ,KAAK,GAAGe,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAR,IAAuB,KAAKhF,IAAL,CAAUgB,IAAV,MAAoB,GAApB,GAA0B,CAA1B,GAA8B,CAAC,CAAtD,CAAZ,CADoD,CAEpD;;AACA,kBAAGgE,KAAK,CAAC,CAAD,CAAL,IAAY,IAAf,EAAqB;AACnB,qBAAK7B,YAAL,CAAkBiB,KAAlB,GAA0B,CAACA,KAAK,GAAG,KAAT,EAAgBgB,OAAhB,CAAwB,CAAxB,CAA1B,CADmB,CAErB;AACC,eAHD,MAGO,IAAGJ,KAAK,CAAC,CAAD,CAAL,IAAY,MAAf,EAAuB;AAC5B,qBAAK7B,YAAL,CAAkBiB,KAAlB,GAA0B,aAAaiB,IAAI,CAACC,GAAL,CAASlB,KAAT,CAAvC;AACD,eARmD,CAUpD;;;AACA,kBAAGY,KAAK,GAAGF,IAAI,CAACE,KAAL,CAAW,wBAAX,CAAX,EAAiD;AAC/C,qBAAK7B,YAAL,CAAkBiB,KAAlB,GAA0B,CAAEY,KAAK,CAAC,CAAD,CAAL,IAAY,OAAb,KAA2B,KAAKhF,IAAL,CAAUgB,IAAV,MAAoB,GAA/C,IAAsD,KAAtD,GAA8D,KAA/D,IAAyE,KAAKmC,YAAL,CAAkBiB,KAArH;AACD;AACJ;AACJ;;AACD,eAAKf,aAAL;AACD;;;+BAEe/C,M,EAAQI,M,EAAQ;AAC9B;AACA,cAAIQ,IAAI,GAAG,KAAKlB,IAAL,CAAUkB,IAAV,CAAe;AACtBC,gBAAI,EAAEb,MADgB;AAEtBc,cAAE,EAAEV,MAFkB;AAGtBW,qBAAS,EAAE,GAHW,CAGP;;AAHO,WAAf,CAAX,CAF8B,CAQ9B;;AACA,cAAIH,IAAI,KAAK,IAAb,EAAmB,OAAO,UAAP;AAEnB,eAAK+D,WAAL;AACA,eAAKM,cAAL;AACD;;;oCAEmB;AAClB,eAAKtF,KAAL,CAAWG,QAAX,CAAoB,KAAKJ,IAAL,CAAUsB,GAAV,EAApB;AACD;;;gCAEW;AACV,eAAKgC,MAAL,CAAY,iCAAZ,EADU,CAEV;;AACA,eAAKkC,aAAL,CAAmB,CAAnB;AACA,eAAKlC,MAAL,CAAY,oCAAZ,EAJU,CAIyC;AACpD;;;gCAEc1B,G,EAAG;AAChB,eAAK5B,IAAL,CAAUyF,QAAV,CAAmB7D,GAAnB;AACD;;;uCAEqB8D,K,EAAK;AACzB,eAAKnD,WAAL,GAAmBmD,KAAnB;AACA,eAAKzF,KAAL,CAAWO,WAAX,CAAuB,KAAK+B,WAA5B;AACD;;;sCAEoBoD,K,EAAK;AACxB,cAAIC,OAAJ,EAAaC,QAAb,EAAuBC,iBAAvB;;AAEQ,cAAIH,KAAK,GAAG,CAAZ,EAAe;AACXA,iBAAK,GAAG,CAAR;AACH;;AACD,cAAIA,KAAK,GAAG,EAAZ,EAAgB;AACZA,iBAAK,GAAG,EAAR;AACH;;AAED,eAAKtD,IAAL,CAAU0D,KAAV,GAAkBJ,KAAlB,CAVgB,CAYhB;;AACA,cAAIA,KAAK,GAAG,CAAZ,EAAe;AACX,iBAAKtD,IAAL,CAAUuC,KAAV,GAAkB,GAAlB;AACH,WAFD,MAEO,IAAIe,KAAK,GAAG,EAAZ,EAAgB;AACnB,iBAAKtD,IAAL,CAAUuC,KAAV,GAAkB,GAAlB;AACH,WAFM,MAEA,IAAIe,KAAK,GAAG,EAAZ,EAAgB;AACnB,iBAAKtD,IAAL,CAAUuC,KAAV,GAAkB,GAAlB;AACH,WAFM,MAEA;AACH;AACA,iBAAKvC,IAAL,CAAUuC,KAAV,GAAkB,EAAlB;AACH;;AAED,eAAKtB,MAAL,CAAY,sCAAsCqC,KAAlD,EAxBgB,CA0BhB;AACA;;AACAE,kBAAQ,GAAGR,IAAI,CAACW,KAAL,CAAYL,KAAK,GAAG,IAAT,GAAiB,CAA5B,CAAX,CA5BgB,CA6BhB;;AACAC,iBAAO,GAAGP,IAAI,CAACW,KAAL,CAAYL,KAAK,GAAG,CAAC,GAAV,GAAiB,EAA5B,CAAV;AAEA,eAAKrC,MAAL,CAAY,oDAAoDsC,OAAhE;AACA,eAAKtC,MAAL,CAAY,kDAAkDuC,QAA9D;AACT;;;iCAGejB,K,EAAK;AACnB,eAAKvC,IAAL,GAAY,IAAIC,IAAJ,EAAZ;AACA,eAAKD,IAAL,CAAUuC,KAAV,GAAkBA,KAAlB;AACD;;;iCAEeqB,K,EAAK;AACnB,eAAK5D,IAAL,GAAY,IAAIC,IAAJ,EAAZ;AACA,eAAKD,IAAL,CAAU4D,KAAV,GAAkBA,KAAlB;AACD;;;oCAEkBC,Q,EAAQ;AACzB,eAAK5C,MAAL,CAAY,mCAAmC4C,QAA/C;AACD;;;0CAEwBC,K,EAAK;AAC5B,eAAK7C,MAAL,CAAY,yCAAyC6C,KAArD;AACD;;;wCAEsBC,I,EAAI;AACzB,eAAKhE,YAAL,GAAoBgE,IAApB;AACA,eAAK/C,aAAL;AACD;;;gCAEW;AACV,eAAKC,MAAL,CAAY,YAAZ;AACA,eAAKA,MAAL,CAAY,SAAZ;AACA,eAAKH,YAAL,CAAkBgB,WAAlB,GAAgC,KAAhC;AACA,eAAKhB,YAAL,CAAkBlC,MAAlB,GAA2B,IAA3B;AACA,eAAKoC,aAAL;AACA,eAAK4B,WAAL;AACA,eAAKoB,mBAAL,GAA2B,KAA3B;AACA,eAAK3D,gBAAL,GAAwB,KAAxB;AACD;;;+BAEU;AACT,cAAG,KAAKD,eAAR,EACY,OAAO,KAAP;AACZ,eAAKzC,IAAL,CAAUsG,IAAV;AACA,eAAKtG,IAAL,CAAUsG,IAAV;AACA,eAAKnD,YAAL,CAAkBlC,MAAlB,GAA2B,IAA3B;AACA,eAAKoC,aAAL;AACA,eAAK4B,WAAL;AACA,iBAAO,IAAP;AACD;;;kCAEa;AACZ,eAAKsB,QAAL;AACD;;;yCAEqB;AACpB,eAAK5D,UAAL,CAAgB6D,cAAhB;AACA,eAAK7D,UAAL,CAAgB8D,IAAhB,CAAqB,OAArB;AACA,eAAK3D,SAAL,GAAiB,KAAKH,UAAL,CAAgBI,UAAhB,CAA2BC,OAA3B,EAAjB;AACD;;;yCAEqB;AACpB,eAAKL,UAAL,CAAgB+D,cAAhB;AACA,eAAK/D,UAAL,CAAgB8D,IAAhB,CAAqB,OAArB;AACA,eAAKxD,SAAL,GAAiB,KAAKN,UAAL,CAAgBO,UAAhB,CAA2BF,OAA3B,EAAjB;AACD;;;;;;;uBA9YUhB,yB;AAAyB,K;;;YAAzBA,yB;AAAyB,6C;AAAA,e;AAAA,a;AAAA,qX;AAAA;AAAA;ACVtC;;AACM;;AACE;;AACI;;AAAI;;AAAuB;;AAC3B;;AAAwB;;AAAa;;AACrC;;AACJ;;AACA;;AACA;;AACI;;AAAsB;;AAAa;;AACnC;;AAAI;;AAAG;;AACX;;AACA;;AACA;;AACI;;AAAuC;AAAA,mBAAS,IAAAsE,IAAA,EAAT;AAAe,WAAf;;AACnC;;AAAU;;AAAM;;AAChB;;AACJ;;AACA;;AAAuC;AAAA,mBAAS,IAAAK,OAAA,EAAT;AAAkB,WAAlB;;AACnC;;AAAU;;AAAS;;AACnB;;AACJ;;AACJ;;AACF;;AACA;;AAAI;;AAAI;;AAEV;;AACI;;AACA;;AAAI;;AAAM;;AACV;;AAAc;;AAAO;;AACrB;;AACJ;;AACA;;AAGJ;;;;AA/BoC;;AAAA;;AAC2C;;AAAA;;AAI7C;;AAAA;;AAoBZ;;AAAA;;;;;;;;;sEDnBT3E,yB,EAAyB;cALrC,uDAKqC;eAL3B;AACTzC,kBAAQ,EAAE,wBADD;AAETC,qBAAW,EAAE,qCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAK2B,Q;;;;;QAiZhC2D,Y;;;;QAOAd,I;;;;QAaAsE,K;AAMJ,qBAAYC,KAAZ,EAA0BC,OAA1B,EAA0CC,OAA1C,EAAwD;AAAA;;AACtD,aAAKF,KAAL,GAAaA,KAAb;AACA,aAAKC,OAAL,GAAeA,OAAf;AACA,aAAKC,OAAL,GAAeA,OAAf;AACD;;;;gCAEW;AAAA;;AACV,eAAKC,SAAL,GAAiBnE,WAAW,CAAC,YAAI;AAChC,gBAAG,EAAE,MAAI,CAACkE,OAAP,IAAkB,CAArB,EAAuB;AACpB,kBAAG,EAAE,MAAI,CAACD,OAAP,GAAiB,CAApB,EAAsB;AACpB,oBAAG,EAAE,MAAI,CAACD,KAAP,GAAe,CAAlB,EAAoB;AAClB9C,yBAAO,CAACC,GAAR,CAAY,WAAZ;AACD,iBAFD,MAEO;AACL,wBAAI,CAAC8C,OAAL,GAAe,EAAf;AACA,wBAAI,CAACC,OAAL,GAAe,EAAf;AACD;AACF,eAPD,MAOO;AACL,sBAAI,CAACA,OAAL,GAAe,EAAf;AACD;AACF;AACF,WAb2B,EAazB,IAbyB,CAA5B;AAcD;;;+BAEU;AACT,cAAG,KAAKC,SAAR,EACEC,YAAY,CAAC,KAAKD,SAAN,CAAZ;AACH;;;kCAEa;AACZ,cAAIH,KAAJ;AACA,cAAIC,OAAJ;AACA,cAAIC,OAAJ;;AAEA,cAAG,KAAKF,KAAL,IAAaK,SAAb,IAA0B,KAAKL,KAAL,CAAWM,QAAX,GAAsBzC,MAAtB,IAAgC,CAA7D,EAA+D;AAC7DmC,iBAAK,GAAG,MAAM,KAAKA,KAAnB;AACD,WAFD,MAEO,IAAG,KAAKA,KAAL,IAAaK,SAAb,IAA0B,KAAKL,KAAL,CAAWM,QAAX,GAAsBzC,MAAtB,IAAgC,CAA7D,EAA+D;AACpEmC,iBAAK,GAAG,KAAKA,KAAL,CAAWM,QAAX,EAAR;AACD;;AAED,cAAG,KAAKL,OAAL,IAAeI,SAAf,IAA4B,KAAKJ,OAAL,CAAaK,QAAb,GAAwBzC,MAAxB,IAAgC,CAA/D,EAAiE;AAC/DoC,mBAAO,GAAG,MAAM,KAAKA,OAArB;AACD,WAFD,MAEO,IAAG,KAAKA,OAAL,IAAeI,SAAf,IAA4B,KAAKJ,OAAL,CAAaK,QAAb,GAAwBzC,MAAxB,IAAkC,CAAjE,EAAmE;AACxEoC,mBAAO,GAAG,KAAKA,OAAL,CAAaK,QAAb,EAAV;AACD;;AAED,cAAG,KAAKJ,OAAL,IAAeG,SAAf,IAA4B,KAAKH,OAAL,CAAaI,QAAb,GAAwBzC,MAAxB,IAAgC,CAA/D,EAAiE;AAC/DqC,mBAAO,GAAG,MAAM,KAAKA,OAArB;AACD,WAFD,MAEO,IAAG,KAAKA,OAAL,IAAeG,SAAf,IAA4B,KAAKH,OAAL,CAAaI,QAAb,GAAwBzC,MAAxB,IAAkC,CAAjE,EAAmE;AACxEqC,mBAAO,GAAG,KAAKA,OAAL,CAAaI,QAAb,EAAV;AACD;;AACD,iBAAON,KAAK,GAAG,GAAR,GAAcC,OAAd,GAAwB,GAAxB,GAA8BC,OAArC;AACD;;;0CAEqB;AACpB,cAAIK,YAAY,GAAG,KAAKP,KAAL,GAAW,EAAX,GAAc,EAAd,GAAmB,KAAKC,OAAL,GAAa,EAAhC,GAAqC,KAAKC,OAA7D;AAEA,iBAAOK,YAAY,GAAG,IAAtB;AACD;;;;;;QAGGxE,U;AAMJ,0BAAYiE,KAAZ,EAA0BC,OAA1B,EAA0CC,OAA1C,EAAwD;AAAA;;AACtD,aAAKhE,UAAL,GAAkB,IAAI6D,KAAJ,CAAUC,KAAV,EAAiBC,OAAjB,EAA0BC,OAA1B,CAAlB;AACA,aAAK7D,UAAL,GAAkB,IAAI0D,KAAJ,CAAUC,KAAV,EAAiBC,OAAjB,EAA0BC,OAA1B,CAAlB;AACD;;;;6BAGWM,S,EAAgB;AAC1B,cAAGA,SAAS,IAAI,OAAb,IAAwB,KAAKC,kBAAhC,EAAmD;AACjD,iBAAKvE,UAAL,CAAgB0D,IAAhB;AACA,iBAAKvD,UAAL,CAAgBS,KAAhB;AACD,WAHD,MAGO,IAAI0D,SAAS,IAAI,OAAb,IAAwB,KAAKE,kBAAjC,EAAoD;AACzD,iBAAKrE,UAAL,CAAgBuD,IAAhB;AACA,iBAAK1D,UAAL,CAAgBY,KAAhB;AACD;AACF;;;yCAEoB;AACnB,eAAK4D,kBAAL,GAA0B,IAA1B;AACD;;;yCAEoB;AACnB,eAAKD,kBAAL,GAA0B,IAA1B;AACD;;;;;;;;;;;;;;;;;;;;;AE7gBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaE,iB;AAEX,mCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA;AAAA;ACP9B;;AAAG;;AAAe;;;;;;;;sEDOLA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTjI,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMgI,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAI7D,OAAO,CAAC8D,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PlayWithComputerSettingsComponent} from './play-with-computer-settings/play-with-computer-settings.component';\nimport { PlayWithComputerComponent } from './play-with-computer/play-with-computer.component';\nimport { GameComponent } from './game/game.component';\nconst routes: Routes = [\n  { path: 'playWithComputerSettings', component: PlayWithComputerSettingsComponent },\n  { path: '', component: PlayWithComputerComponent },\n  { path: 'playOnline', component: GameComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'JeffChess';\n}\n","<app-menu></app-menu>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GameComponent } from './game/game.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { PlayWithComputerComponent } from './play-with-computer/play-with-computer.component';\nimport { PlayWithComputerSettingsComponent } from './play-with-computer-settings/play-with-computer-settings.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameComponent,\n    LoginComponent,\n    RegisterComponent,\n    PlayWithComputerComponent,\n    PlayWithComputerSettingsComponent,\n    MenuComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    MatProgressBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport * as Chess from 'chess.js';\ndeclare var ChessBoard:any;\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n\n  board:any;\n  game:any;\n  status: string;\n  pgn:string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    const self = this;\n    this.game = new Chess();\n   this.board = ChessBoard('chessBoard',{\n      draggable: true,\n      position: 'start',\n      onDragStart: function (source, piece, position, orientation) { \n        return self.onDragStart(source, piece, position, orientation); \n      },\n      onDrop: function (source, target, piece, newPos, oldPos, orientation) { \n        return self.onDrop(source, target); \n      },\n      onSnapEnd: function (source, target, piece) { \n        self.onSnapEnd(); \n      }\n    });\n    this.updateStatus;\n  }\n\n  private onDragStart (source, piece, position, orientation) {\n    // do not pick up pieces if the game is over\n    //this.game = new Chess();\n    //console.log(this.board);\n\n    if (this.game.game_over()) return false\n  \n    // only pick up pieces for the side to move\n    if ((this.game.turn() === 'w' && piece.search(/^b/) !== -1) ||\n        (this.game.turn() === 'b' && piece.search(/^w/) !== -1)) {\n      return false\n    }\n  }\n\n  private onDrop (source, target) {\n    // see if the move is legal\n    var move = this.game.move({\n      from: source,\n      to: target,\n      promotion: 'q' // NOTE: always promote to a queen for example simplicity\n    })\n  \n    // illegal move\n    if (move === null) \n      return 'snapback'\n    this.updateStatus;\n  }\n\n  private onSnapEnd () {\n    this.board.position(this.game.fen())\n    //console.log(this.board);\n  }\n\n  private updateStatus() {\n    var status = ''\n  \n    var moveColor = 'White'\n    if (this.game.turn() === 'b') {\n      moveColor = 'Black'\n    }\n  \n    // checkmate?\n    if (this.game.in_checkmate()) {\n      status = 'Game over, ' + moveColor + ' is in checkmate.'\n    }\n  \n    // draw?\n    else if (this.game.in_draw()) {\n      status = 'Game over, drawn position'\n    }\n  \n    // game still on\n    else {\n      status = moveColor + ' to move'\n  \n      // check?\n      if (this.game.in_check()) {\n        status += ', ' + moveColor + ' is in check'\n      }\n    }\n  \n    this.status = status;\n    this.pgn = this.game.pgn();\n  }\n\n}\n","Status : {{status}}\n<div id=\"chessBoard\" style=\"width: 400px;\"></div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-sidenav-container>\n    <mat-sidenav #sidenav mode=\"over\" class=\"sideNavBar\">\n        <div>\n            <img src=\"assets/images/avatar.png\" alt=\"Avatar\" class=\"avatar\">\n            <span class=\"userName\">Isaac Jefferson</span>\n        </div>\n        <div>\n            <mat-nav-list>\n                <!--<a mat-list-item href=\"playOnline\">Play Online</a> -->\n                <a mat-list-item href=\"playWithComputer\">Play With Computer</a>\n                <!--<a mat-list-item href=\"playWithFriend\">Play With Friends</a>-->\n            </mat-nav-list>\n        </div>\n    </mat-sidenav>\n    <mat-sidenav-content>\n        <div class=\"header\">\n            <button mat-icon-button color=\"accent\" (click)=\"sidenav.toggle()\" aria-label=\"Menu icon\">\n                <mat-icon>menu</mat-icon>\n            </button>\n            <h2 class=\"title\">GM Chess</h2>\n        </div>\n        <div class=\"container\">\n            <router-outlet></router-outlet>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-play-with-computer-settings',\n  templateUrl: './play-with-computer-settings.component.html',\n  styleUrls: ['./play-with-computer-settings.component.css']\n})\nexport class PlayWithComputerSettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form class=\"form-horizontal\">\n    <div class=\"form-group\">\n      <label for=\"timeBase\" class=\"control-label col-xs-4 col-sm-6 col-md-4\">Base time (min)</label>\n      <div class=\"col-xs-4 col-sm-6 col-md-4\">\n        <input type=\"number\" class=\"form-control\" id=\"timeBase\" value=\"5\">\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"timeInc\" class=\"control-label col-xs-4 col-sm-6 col-md-4\">Increment (sec)</label>\n      <div class=\"col-xs-4 col-sm-6 col-md-4\">\n        <input type=\"number\" class=\"form-control\" id=\"timeInc\" value=\"2\">\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"skillLevel\" class=\"control-label col-xs-4 col-sm-6 col-md-4\">Skill Level (0-20)</label>\n      <div class=\"col-xs-4 col-sm-6 col-md-4\">\n        <input type=\"number\" class=\"form-control\" id=\"skillLevel\" value=\"0\">\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"color\" class=\"control-label col-xs-4 col-sm-6 col-md-4\">I play</label>\n      <div class=\"col-xs-4 col-sm-6 col-md-4\">\n        <div class=\"btn-group\" data-toggle=\"buttons\">\n          <label class=\"btn btn-primary active\" id=\"color-white\"><input type=\"radio\" name=\"color\">White</label>\n          <label class=\"btn btn-primary\" id=\"color-black\"><input type=\"radio\" name=\"color\">Black</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"showScore\" class=\"control-label col-xs-4 col-sm-6 col-md-4\">Show score</label>\n      <div class=\"col-xs-4 col-sm-6 col-md-4\">\n        <input type=\"checkbox\" class=\"form-control\" id=\"showScore\" checked>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"color\" class=\"control-label col-xs-4 col-sm-6 col-md-4\"></label>\n      <div class=\"col-xs-4 col-sm-6 col-md-4\">\n        <button type=\"button\" class=\"btn btn-primary\" routerLink=\"/\">New Game</button>\n      </div>\n    </div>\n    \n    <div class=\"form-group\">\n      <label for=\"color\" class=\"control-label col-xs-4 col-sm-6 col-md-4\">Promote to</label>\n      <div class=\"col-xs-4 col-sm-6 col-md-4\">\n        <select id=promote>\n          <option value=q selected>Queen</option>\n          <option value=r>Rook</option>\n          <option value=b>Bishop</option>\n          <option value=n>Knight</option>\n        </select>\n      </div>\n    </div>\n  </form>\n","import { Component, OnInit } from '@angular/core';\nimport * as Chess from 'chess.js';\ndeclare var ChessBoard:any;\ndeclare var Stockfish:any;\n\n@Component({\n  selector: 'app-play-with-computer',\n  templateUrl: './play-with-computer.component.html',\n  styleUrls: ['./play-with-computer.component.css']\n})\nexport class PlayWithComputerComponent implements OnInit {\n  board:any;\n  game:any;\n  status: string;\n  pgn:string;\n  engine;\n  evaler;\n  engineStatus: EngineStatus;\n  displayScore:boolean;\n  time:Time;\n  playerColor;\n  clockTimeoutID;\n  isEngineRunning:boolean;\n  announced_game_over;\n  computerThinking : boolean;\n  private chessClock: ChessClock;\n  public whiteTime:string;\n  public blackTime:string;\n\n  constructor() {\n    this.engine = new Worker(\"/assets/js/stockfish.js\");\n    this.evaler = new Worker(\"/assets/js/stockfish.js\");\n    this.displayScore = false;\n    this.time = new Time();\n    this.playerColor = \"white\";\n    this.clockTimeoutID = null;\n    this.isEngineRunning = false;\n    this.computerThinking = false;\n    this.chessClock = new ChessClock(0,15,0);\n\n    setInterval(()=>{\n      /* Time Interval to update the clock during play*/\n      this.whiteTime = this.chessClock.whiteClock.getTime();\n      this.blackTime = this.chessClock.blackClock.getTime();\n    }, 1000);\n   }\n\n  ngOnInit(): void {\n    const self = this;\n    this.engineStatus = new EngineStatus();\n    this.game = new Chess();\n    this.board = ChessBoard('chessBoard',{\n      draggable: true,\n      position: 'start',\n      onDragStart: function (source, piece, position, orientation) { \n        return self.onDragStart(source, piece, position, orientation); \n      },\n      onDrop: function (source, target, piece, newPos, oldPos, orientation) { \n        return self.onDrop(source, target); \n      },\n      onSnapEnd: function (source, target, piece) { \n        self.onSnapEnd(); \n      }\n    });\n    self.displayStatus;\n    self.uciCmd('uci');\n\n    self.evaler.onmessage = function evalerOnmessage(event) {\n      return self.evalerOnmessage(event);\n    }\n    \n    \n    self.engine.onmessage = function engineOnmessage(event) {\n      return self.engineOnmessage(event);\n    }\n   \n\n    self.start();\n  }\n\n  private onDragStart (source, piece, position, orientation) {\n    var re = this.playerColor == 'white' ? /^b/ : /^w/\n        if (this.game.game_over() ||\n            piece.search(re) !== -1) {\n            return false;\n        }\n  };\n\n  private uciCmd(cmd, which?:any) {\n    console.log(\"UCI: \" + cmd);\n    \n    (which || this.engine).postMessage(cmd);\n  }\n\n  private displayStatus() {\n    var status = 'Engine: ';\n    if(!this.engineStatus.engineLoaded) {\n        status += 'loading...';\n    } else if(!this.engineStatus.engineReady) {\n        status += 'loaded...';\n    } else {\n        status += 'ready.';\n    }\n    \n    if(this.engineStatus.search) {\n        status += '<br>' +this.engineStatus.search;\n        if(this.engineStatus.score && this.displayScore) {\n            status += (this.engineStatus.score.substr(0, 4) === \"Mate\" ? \" \" : ' Score: ') + this.engineStatus.score;\n        }\n    }\n  }\n\n  /*private displayClock(color, t) {\n    var isRunning = false;\n    if(this.time.startTime > 0 && color == this.time.clockColor) {\n        t = Math.max(0, t + this.time.startTime - Date.now());\n        isRunning = true;\n    }\n    var id = color == this.playerColor ? '#time2' : '#time1';\n    var sec = Math.ceil(t / 1000);\n    var min = Math.floor(sec / 60);\n    sec -= min * 60;\n    var hours = Math.floor(min / 60);\n    min -= hours * 60;\n    var display = hours + ':' + ('0' + min).slice(-2) + ':' + ('0' + sec).slice(-2);\n    if(isRunning) {\n        display += sec & 1 ? ' <--' : ' <-';\n    }\n    //$(id).text(display);\n    //TODO::\n\n    console.log(\"Display : \" + display);\n  }*/\n\n  /*private updateClock() {\n    this.displayClock('white', this.time.wtime);\n    this.displayClock('black', this.time.btime);\n  }*/\n\n  /*private clockTick() {\n    this.updateClock;\n    var t = (this.time.clockColor == 'white' ? this.time.wtime : this.time.btime) + this.time.startTime - Date.now();\n    var timeToNextSecond = (t % 1000) + 1;\n  }*/\n\n  /*private stopClock() {\n    if(this.clockTimeoutID !== null) {\n        clearTimeout(this.clockTimeoutID);\n        this.clockTimeoutID = null;\n    }\n    if(this.time.startTime > 0) {\n        var elapsed = Date.now() - this.time.startTime;\n        this.time.startTime = null;\n        if(this.time.clockColor == 'white') {\n            this.time.wtime = Math.max(0, this.time.wtime - elapsed);\n        } else {\n            this.time.btime = Math.max(0, this.time.btime - elapsed);\n        }\n    }\n  }*/\n\n  /*private startClock() {\n    if(this.game.turn() == 'w') {\n        this.time.wtime += this.time.winc;\n        this.time.clockColor = 'white';\n    } else {\n        this.time.btime += this.time.binc;\n        this.time.clockColor = 'black';\n    }\n    this.time.startTime = Date.now();\n    this.clockTick();\n  }*/\n\n  private get_moves()\n    {\n        var moves = '';\n        var history = this.game.history({verbose: true});\n        \n        for(var i = 0; i < history.length; ++i) {\n            var move = history[i];\n            moves += ' ' + move.from + move.to + (move.promotion ? move.promotion : '');\n        }\n        \n        return moves;\n    }\n\n    private prepareMove() {\n     // this.stopClock();\n      this.pgn = this.game.pgn();\n      this.board.position(this.game.fen());\n      //this.updateClock;\n      var turn = this.game.turn() == 'w' ? 'white' : 'black';\n      if(!this.game.game_over()) {\n          if(turn != this.playerColor) {\n              this.uciCmd('position startpos moves' + this.get_moves());\n              this.uciCmd('position startpos moves' + this.get_moves(), this.evaler);\n              this.uciCmd(\"eval\", this.evaler);\n              \n              if (this.time && this.chessClock) {\n                  this.uciCmd(\"go \" + (this.time.depth ? \"depth \" + this.time.depth : \"\") + \" wtime \" + this.chessClock.whiteClock.getMilliSeconds() + \" winc \" + 0 + \" btime \" + this.chessClock.blackClock.getMilliSeconds() + \" binc \" + 0);\n              } else {\n                this.uciCmd(\"go \" + (this.time.depth ? \"depth \" + this.time.depth : \"\"));\n              }\n              this.isEngineRunning = true;\n          }\n      }\n  }\n\n  private evalerOnmessage(event) {\n    var line;\n    \n    if (event && typeof event === \"object\") {\n        line = event.data;\n    } else {\n        line = event;\n    }\n    \n    console.log(\"evaler: \" + line);\n    \n    /// Ignore some output.\n    if (line === \"uciok\" || line === \"readyok\" || line.substr(0, 11) === \"option name\") {\n        return;\n    }\n  }\n\n  private engineOnmessage(event) {\n    this.computerThinking = true;\n    var line;\n    \n    if (event && typeof event === \"object\") {\n        line = event.data;\n    } else {\n        line = event;\n    }\n    console.log(\"Reply: \" + line)\n    if(line == 'uciok') {\n        this.engineStatus.engineLoaded = true;\n        this.computerThinking = false;\n    } else if(line == 'readyok') {\n      this.engineStatus.engineReady = true;\n      this.computerThinking = false;\n    } else {\n        var match = line.match(/^bestmove ([a-h][1-8])([a-h][1-8])([qrbn])?/);\n        /// Did the AI move?\n        if(match) {\n          this.isEngineRunning = false;\n          this.game.move({from: match[1], to: match[2], promotion: match[3]});\n          this.prepareMove();\n          this.uciCmd(\"eval\",  this.evaler);\n          this.computerThinking = false;\n          this.stopBlackClock();\n            //uciCmd(\"eval\");\n        /// Is it sending feedback?\n        } else if(match = line.match(/^info .*\\bdepth (\\d+) .*\\bnps (\\d+)/)) {\n          this.engineStatus.search = 'Depth: ' + match[1] + ' Nps: ' + match[2];\n        }\n        \n        /// Is it sending feed back with a score?\n        if(match = line.match(/^info .*\\bscore (\\w+) (-?\\d+)/)) {\n            var score = parseInt(match[2]) * ( this.game.turn() == 'w' ? 1 : -1);\n            /// Is it measuring in centipawns?\n            if(match[1] == 'cp') {\n              this.engineStatus.score = (score / 100.0).toFixed(2);\n            /// Did it find a mate?\n            } else if(match[1] == 'mate') {\n              this.engineStatus.score = 'Mate in ' + Math.abs(score);\n            }\n            \n            /// Is the score bounded?\n            if(match = line.match(/\\b(upper|lower)bound\\b/)) {\n              this.engineStatus.score = ((match[1] == 'upper') == ( this.game.turn() == 'w') ? '<= ' : '>= ') +  this.engineStatus.score\n            }\n        }\n    }\n    this.displayStatus;\n  };\n\n  private onDrop (source, target) {\n    // see if the move is legal\n    var move = this.game.move({\n        from: source,\n        to: target,\n        promotion: 'q' // NOTE: always promote to a queen for example simplicity\n    });\n\n    // illegal move\n    if (move === null) return 'snapback';\n\n    this.prepareMove();\n    this.stopWhiteClock();\n  };\n\n  private onSnapEnd() {\n    this.board.position(this.game.fen());\n  };  \n\n  public reset(){\n    this.uciCmd('setoption name Contempt value 0');\n    //uciCmd('setoption name Skill Level value 20');\n    this.setSkillLevel(0);\n    this.uciCmd('setoption name King Safety value 0'); /// Agressive 100 (it's now symetric)\n  }\n\n  public loadpgn(pgn){\n    this.game.load_pgn(pgn);\n  }\n\n  public setPlayerColor(color){\n    this.playerColor = color;\n    this.board.orientation(this.playerColor);\n  }\n\n  public setSkillLevel(skill){\n    var max_err, err_prob, difficulty_slider;\n            \n            if (skill < 0) {\n                skill = 0;\n            }\n            if (skill > 20) {\n                skill = 20;\n            }\n            \n            this.time.level = skill;\n            \n            /// Change thinking depth allowance.\n            if (skill < 5) {\n                this.time.depth = \"1\";\n            } else if (skill < 10) {\n                this.time.depth = \"2\";\n            } else if (skill < 15) {\n                this.time.depth = \"3\";\n            } else {\n                /// Let the engine decide.\n                this.time.depth = \"\";\n            }\n            \n            this.uciCmd('setoption name Skill Level value ' + skill);\n            \n            ///NOTE: Stockfish level 20 does not make errors (intentially), so these numbers have no effect on level 20.\n            /// Level 0 starts at 1\n            err_prob = Math.round((skill * 6.35) + 1);\n            /// Level 0 starts at 10\n            max_err = Math.round((skill * -0.5) + 10);\n            \n            this.uciCmd('setoption name Skill Level Maximum Error value ' + max_err);\n            this.uciCmd('setoption name Skill Level Probability value ' + err_prob);\n  }\n\n\n  public setDepth(depth){\n    this.time = new Time();\n    this.time.depth = depth;\n  }\n\n  public setNodes(nodes){\n    this.time = new Time();\n    this.time.nodes = nodes;\n  }\n\n  public setContempt(contempt){\n    this.uciCmd('setoption name Contempt value ' + contempt);\n  }\n\n  public setAggressiveness(value){\n    this.uciCmd('setoption name Aggressiveness value ' + value);\n  }\n\n  public setDisplayScore(flag){\n    this.displayScore = flag;\n    this.displayStatus();\n  }\n\n  public start(){\n    this.uciCmd('ucinewgame');\n    this.uciCmd('isready');\n    this.engineStatus.engineReady = false;\n    this.engineStatus.search = null;\n    this.displayStatus();\n    this.prepareMove();\n    this.announced_game_over = false;\n    this.computerThinking = false;\n  }\n\n  public undo(){\n    if(this.isEngineRunning)\n                return false;\n    this.game.undo();\n    this.game.undo();\n    this.engineStatus.search = null;\n    this.displayStatus();\n    this.prepareMove();\n    return true;\n  }\n\n  public newGame(){\n    this.ngOnInit();\n  }\n\n  private stopWhiteClock(){\n    this.chessClock.startWhitePlay();\n    this.chessClock.stop(\"white\");\n    this.whiteTime = this.chessClock.whiteClock.getTime();\n  }\n\n  private stopBlackClock(){\n    this.chessClock.startBlackPlay();\n    this.chessClock.stop(\"black\");\n    this.blackTime = this.chessClock.blackClock.getTime();\n  }\n}\n\nclass EngineStatus{\n  public engineReady: boolean;\n  public engineLoaded : boolean;\n  public search : string;\n  public score : string;\n}\n\nclass Time {\n  public  startTime: number;\n  public clockColor : string;\n  public wtime : number;\n  public btime : number;\n  public winc : number;\n  public binc : number;\n  public depth : string;\n  public nodes : string;\n  public level : number;\n\n}\n\nclass Clock{\n  public hours: number;\n  public minutes : number;\n  public seconds : number;\n  private timeoutId:any;\n\n  constructor(hours:number, minutes:number, seconds:number){\n    this.hours = hours;\n    this.minutes = minutes;\n    this.seconds = seconds;\n  }\n\n  public start(){\n    this.timeoutId = setInterval(()=>{\n     if(--this.seconds <= 0){\n        if(--this.minutes < 0){\n          if(--this.hours < 0){\n            console.log(\"Game Over\");\n          } else {\n            this.minutes = 59;\n            this.seconds = 60;\n          }\n        } else {\n          this.seconds = 60;\n        }\n      }\n    }, 1000);\n  }\n\n  public stop(){\n    if(this.timeoutId)\n      clearTimeout(this.timeoutId);\n  }\n\n  public getTime(){\n    var hours:string;\n    var minutes:string;\n    var seconds:string;\n\n    if(this.hours !=undefined && this.hours.toString().length == 1){\n      hours = \"0\" + this.hours;\n    } else if(this.hours !=undefined && this.hours.toString().length == 2){\n      hours = this.hours.toString();\n    }\n\n    if(this.minutes !=undefined && this.minutes.toString().length==1){\n      minutes = \"0\" + this.minutes;\n    } else if(this.minutes !=undefined && this.minutes.toString().length == 2){\n      minutes = this.minutes.toString();\n    }\n\n    if(this.seconds !=undefined && this.seconds.toString().length==1){\n      seconds = \"0\" + this.seconds;\n    } else if(this.seconds !=undefined && this.seconds.toString().length == 2){\n      seconds = this.seconds.toString();\n    }\n    return hours + \":\" + minutes + \":\" + seconds;\n  }\n\n  public getMilliSeconds(){\n    var totalSeconds = this.hours*60*60 + this.minutes*60 + this.seconds;\n\n    return totalSeconds * 1000;\n  }\n}\n\nclass ChessClock{\n  public whiteClock: Clock;\n  public blackClock : Clock;\n  private isWhitePlayStarted : boolean;\n  private isBlackPlayStarted : boolean;\n\n  constructor(hours:number, minutes:number, seconds:number){\n    this.whiteClock = new Clock(hours, minutes, seconds);\n    this.blackClock = new Clock(hours, minutes, seconds);\n  }\n  \n\n  public stop(stopColor:string){\n    if(stopColor == \"white\" && this.isBlackPlayStarted){\n      this.whiteClock.stop();\n      this.blackClock.start();\n    } else if (stopColor == \"black\" && this.isWhitePlayStarted){\n      this.blackClock.stop();\n      this.whiteClock.start();\n    }\n  }\n\n  public startWhitePlay(){\n    this.isWhitePlayStarted = true;\n  }\n\n  public startBlackPlay(){\n    this.isBlackPlayStarted = true;\n  }\n\n}\n","<div>\n      <div class=\"GMPlayArea\">\n        <div class=\"computer\">\n            <h2>Pemela(Computer Engine)</h2>\n            <span id=\"computerTime\">{{blackTime}}</span>\n            <mat-progress-bar mode=\"indeterminate\" class=\"computerProgressBar\" *ngIf=\"computerThinking\"></mat-progress-bar>\n        </div>\n        <div id=\"chessBoard\"></div>\n        <div class=\"player\">\n            <span id=\"playerTime\">{{whiteTime}}</span>\n            <h2>You</h2>\n        </div>\n        <br>\n        <div class=\"action\">\n            <button mat-flat-button color=\"accent\" (click)=\"undo()\">\n                <mat-icon>replay</mat-icon>\n                Undo\n            </button>\n            <button mat-flat-button color=\"accent\" (click)=\"newGame()\">\n                <mat-icon>autorenew</mat-icon>\n                New Game\n            </button>\n        </div>\n      </div>\n      <br><br><br>\n\n    <div class=\"moves\">\n        <hr>\n        <h3>Moves:</h3>\n        <div id=\"pgn\">{{pgn}}</div>\n        <hr>\n    </div>\n    <div class=\"settings\">\n       \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>register works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}